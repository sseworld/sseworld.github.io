import{_ as e,c as t,o as d,a4 as o}from"./chunks/framework.CV4YwD3C.js";const m=JSON.parse('{"title":"Scroll Mode","description":"","frontmatter":{"title":"Scroll Mode"},"headers":[],"relativePath":"docs/sse-pdf-viewer/plugins/Scroll-mode.md","filePath":"docs/sse-pdf-viewer/plugins/Scroll-mode.md"}'),a={name:"docs/sse-pdf-viewer/plugins/Scroll-mode.md"},s=o(`<h1 id="scroll-mode-plugin" tabindex="-1">Scroll Mode plugin <a class="header-anchor" href="#scroll-mode-plugin" aria-label="Permalink to &quot;Scroll Mode plugin&quot;">​</a></h1><p>The <code>scroll-mode</code> plugin provides buttons to adjust the scroll mode to one of four possible modes:</p><table tabindex="0"><thead><tr><th>MODE</th><th>TYPE</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td><code>ScrollMode.Vertical</code></td><td><code>ScrollMode</code></td><td>The default scroll mode. Scroll the pages in the vertical direction</td></tr><tr><td><code>ScrollMode.Horizontal</code></td><td><code>ScrollMode</code></td><td>Scroll the pages in the horizontal direction</td></tr><tr><td><code>ScrollMode.Page</code></td><td><code>ScrollMode</code></td><td>Display a single page each time</td></tr><tr><td><code>ScrollMode.Wrapped</code></td><td><code>ScrollMode</code></td><td>Scroll the pages in both vertical and horizontal directions</td></tr></tbody></table><p><code>ScrollMode</code> is an enum provided by the <code>@sse-ui/pdf-core</code> package.</p><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; npm install @sse-ui/pdf-scroll-mode;</span></span></code></pre></div><p>OR</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; yarn add @sse-ui/pdf-scroll-mode;</span></span></code></pre></div><blockquote><p>The <code>scroll-mode</code> plugin is included in the <a href="/v2/docs/sse-pdf-viewer/plugins/Toolbar">toolbar</a> and <a href="/v2/docs/sse-pdf-viewer/plugins/Default-layout">default-layout</a> plugins</p></blockquote><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="_1-import-the-plugin" tabindex="-1">1. Import the plugin <a class="header-anchor" href="#_1-import-the-plugin" aria-label="Permalink to &quot;1. Import the plugin&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> scrollModePluginInstance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scrollModePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>The plugin instance <code>scrollModePluginInstance</code> provides the following properties:</p><table tabindex="0"><thead><tr><th>PROPERTY</th><th>TYPE</th><th>DESCRIPTION</th><th>FROM</th></tr></thead><tbody><tr><td><code>switchScrollMode</code></td><td><code>Function</code></td><td>Switch to a given scroll mode</td><td>1.0.0</td></tr><tr><td><code>SwitchScrollMode</code></td><td><code>ReactElement</code></td><td>Customizable button to switch the scroll mode</td><td>1.0.0</td></tr><tr><td><code>SwitchScrollModeButton</code></td><td><code>ReactElement</code></td><td>The default button to switch the scroll mode</td><td>1.0.0</td></tr><tr><td><code>SwitchScrollModeMenuItem</code></td><td><code>ReactElement</code></td><td>The default menu item to switch the scroll mode</td><td>1.0.0</td></tr><tr><td><code>switchViewMode</code></td><td><code>Function</code></td><td>Switch to a given viewmode</td><td>1.0.0</td></tr><tr><td><code>SwitchViewMode</code></td><td><code>ReactElement</code></td><td>Customizable button to switch the viewmode</td><td>1.0.0</td></tr><tr><td><code>SwitchViewModeButton</code></td><td><code>ReactElement</code></td><td>The default button to switch the viewmode</td><td>1.0.0</td></tr><tr><td><code>SwitchViewModeMenuItem</code></td><td><code>ReactElement</code></td><td>The default menu item to switch the viewmode</td><td>1.0.0</td></tr></tbody></table><p>The <code>switchScrollMode</code> function can be used to <a href="https://react-pdf-viewer.dev/examples/switch-to-a-scroll-mode/" target="_blank" rel="noreferrer">switch</a> the current layout to a given mode programmatically:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ScrollMode } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@sse-ui/pdf-core&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Switch to the wrapped mode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">switchScrollMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ScrollMode.Wrapped);</span></span></code></pre></div><h3 id="_2-register-the-plugin" tabindex="-1">2. Register the plugin <a class="header-anchor" href="#_2-register-the-plugin" aria-label="Permalink to &quot;2. Register the plugin&quot;">​</a></h3><p>Register the <code>scroll-mode</code> plugin instance:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Viewer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[scrollModePluginInstance]} /&gt;</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p>The <code>scroll-mode</code> plugin provides other useful properties as following:</p><table tabindex="0"><thead><tr><th>PROPERTY</th><th>TYPE</th><th>DESCRIPTION</th><th>FROM</th></tr></thead><tbody><tr><td><code>DualPageCoverViewModeIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the dual page with cover viewmode</td><td>1.0.0</td></tr><tr><td><code>DualPageViewModeIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the dual page viewmode</td><td>1.0.0</td></tr><tr><td><code>HorizontalScrollingIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the horizontal scroll mode</td><td>1.0.0</td></tr><tr><td><code>PageScrollingIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the page scroll mode</td><td>1.0.0</td></tr><tr><td><code>VerticalScrollingIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the vertical scroll mode</td><td>1.0.0</td></tr><tr><td><code>WrappedScrollingIcon</code></td><td><code>ReactElement</code></td><td>The icon represents the wrapped scroll mode</td><td>1.0.0</td></tr></tbody></table>`,22),i=[s];function l(c,r,n,h,p,u){return d(),t("div",null,i)}const k=e(a,[["render",l]]);export{m as __pageData,k as default};

import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.BxU-Can-.js";const E=JSON.parse('{"title":"SSE File Saver","description":"","frontmatter":{"title":"SSE File Saver"},"headers":[],"relativePath":"docs/sse-file-saver.md","filePath":"docs/sse-file-saver.md"}'),e={name:"docs/sse-file-saver.md"},n=t(`<p>If you need to save really large files bigger than the blob&#39;s size limitation or don&#39;t have enough RAM, then have a look at the more advanced <a href="https://github.com/jimmywarting/StreamSaver.js" target="_blank" rel="noreferrer">StreamSaver.js</a> that can save data directly to the hard drive asynchronously with the power of the new streams API. That will have support for progress, cancelation and knowing when it&#39;s done writing</p><h1 id="filesaver-js" tabindex="-1">FileSaver.js <a class="header-anchor" href="#filesaver-js" aria-label="Permalink to &quot;FileSaver.js&quot;">​</a></h1><p>FileSaver.js is the solution to saving files on the client-side, and is perfect for web apps that generates files on the client, However if the file is coming from the server we recommend you to first try to use <a href="https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-http-header" target="_blank" rel="noreferrer">Content-Disposition</a> attachment response header as it has more cross-browser compatiblity.</p><p>Looking for <code>canvas.toBlob()</code> for saving canvases? Check out <a href="https://github.com/eligrey/canvas-toBlob.js" target="_blank" rel="noreferrer">canvas-toBlob.js</a> for a cross-browser implementation.</p><h2 id="supported-browsers" tabindex="-1">Supported Browsers <a class="header-anchor" href="#supported-browsers" aria-label="Permalink to &quot;Supported Browsers&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Browser</th><th>Constructs as</th><th>Filenames</th><th>Max Blob Size</th><th>Dependencies</th></tr></thead><tbody><tr><td>Firefox 20+</td><td>Blob</td><td>Yes</td><td>800 MiB</td><td>None</td></tr><tr><td>Firefox &lt; 20</td><td>data: URI</td><td>No</td><td>n/a</td><td><a href="https://github.com/eligrey/Blob.js" target="_blank" rel="noreferrer">Blob.js</a></td></tr><tr><td>Chrome</td><td>Blob</td><td>Yes</td><td><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107" target="_blank" rel="noreferrer">2GB</a></td><td>None</td></tr><tr><td>Chrome for Android</td><td>Blob</td><td>Yes</td><td><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=375297#c107" target="_blank" rel="noreferrer">RAM/5</a></td><td>None</td></tr><tr><td>Edge</td><td>Blob</td><td>Yes</td><td>?</td><td>None</td></tr><tr><td>IE 10+</td><td>Blob</td><td>Yes</td><td>600 MiB</td><td>None</td></tr><tr><td>Opera 15+</td><td>Blob</td><td>Yes</td><td>500 MiB</td><td>None</td></tr><tr><td>Opera &lt; 15</td><td>data: URI</td><td>No</td><td>n/a</td><td><a href="https://github.com/eligrey/Blob.js" target="_blank" rel="noreferrer">Blob.js</a></td></tr><tr><td>Safari 6.1+*</td><td>Blob</td><td>No</td><td>?</td><td>None</td></tr><tr><td>Safari &lt; 6</td><td>data: URI</td><td>No</td><td>n/a</td><td><a href="https://github.com/eligrey/Blob.js" target="_blank" rel="noreferrer">Blob.js</a></td></tr><tr><td>Safari 10.1+</td><td>Blob</td><td>Yes</td><td>n/a</td><td>None</td></tr></tbody></table><p>Feature detection is possible:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isFileSaverSupported </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !!new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Blob;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e) {}</span></span></code></pre></div><h3 id="ie-10" tabindex="-1">IE &lt; 10 <a class="header-anchor" href="#ie-10" aria-label="Permalink to &quot;IE &lt; 10&quot;">​</a></h3><p>It is possible to save text files in IE &lt; 10 without Flash-based polyfills. See <a href="https://github.com/koffsyrup/FileSaver.js#examples" target="_blank" rel="noreferrer">ChenWenBrian and koffsyrup&#39;s <code>saveTextAs()</code></a> for more details.</p><h3 id="safari-6-1" tabindex="-1">Safari 6.1+ <a class="header-anchor" href="#safari-6-1" aria-label="Permalink to &quot;Safari 6.1+&quot;">​</a></h3><p>Blobs may be opened instead of saved sometimes—you may have to direct your Safari users to manually press <kbd>⌘</kbd>+<kbd>S</kbd> to save the file after it is opened. Using the <code>application/octet-stream</code> MIME type to force downloads <a href="https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096" target="_blank" rel="noreferrer">can cause issues in Safari</a>.</p><h3 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h3><p>saveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please <a href="https://bugs.webkit.org/show_bug.cgi?id=167341" target="_blank" rel="noreferrer">tell Apple how this WebKit bug is affecting you</a>.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><h3 id="import-saveas-from-sse-file-saver" tabindex="-1">Import <code>saveAs()</code> from sse-file-saver <a class="header-anchor" href="#import-saveas-from-sse-file-saver" aria-label="Permalink to &quot;Import \`saveAs()\` from sse-file-saver&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { saveAs } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;sse-file-saver&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileSaver </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Blob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Url, optional DOMString filename, optional Object { autoBom })</span></span></code></pre></div><p>Pass <code>{ autoBom: true }</code> if you want FileSaver.js to automatically provide Unicode text encoding hints (see: <a href="https://en.wikipedia.org/wiki/Byte_order_mark" target="_blank" rel="noreferrer">byte order mark</a>). Note that this is only done if your blob type has <code>charset=utf-8</code> set.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="saving-text-using-require" tabindex="-1">Saving text using <code>require()</code> <a class="header-anchor" href="#saving-text-using-require" aria-label="Permalink to &quot;Saving text using \`require()\`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileSaver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sse-file-saver&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blob </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Blob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain;charset=utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileSaver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blob, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="saving-text" tabindex="-1">Saving text <a class="header-anchor" href="#saving-text" aria-label="Permalink to &quot;Saving text&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blob </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Blob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain;charset=utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileSaver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blob, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="saving-urls" tabindex="-1">Saving URLs <a class="header-anchor" href="#saving-urls" aria-label="Permalink to &quot;Saving URLs&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileSaver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://httpbin.org/image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Using URLs within the same origin will just use <code>a[download]</code>. Otherwise, it will first check if it supports cors header with a synchronous head request. If it does, it will download the data and save using blob URLs. If not, it will try to download it using <code>a[download]</code>.</p><p>The standard W3C File API <a href="https://developer.mozilla.org/en-US/docs/DOM/Blob" target="_blank" rel="noreferrer"><code>Blob</code></a> interface is not available in all browsers. <a href="https://github.com/eligrey/Blob.js" target="_blank" rel="noreferrer">Blob.js</a> is a cross-browser <code>Blob</code> implementation that solves this.</p><h3 id="saving-a-canvas" tabindex="-1">Saving a canvas <a class="header-anchor" href="#saving-a-canvas" aria-label="Permalink to &quot;Saving a canvas&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> canvas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-canvas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">canvas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBlob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">blob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blob, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pretty image.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>Note: The standard HTML5 <code>canvas.toBlob()</code> method is not available in all browsers. <a href="https://github.com/eligrey/canvas-toBlob.js" target="_blank" rel="noreferrer">canvas-toBlob.js</a> is a cross-browser <code>canvas.toBlob()</code> that polyfills this.</p><h3 id="saving-file" tabindex="-1">Saving File <a class="header-anchor" href="#saving-file" aria-label="Permalink to &quot;Saving File&quot;">​</a></h3><p>You can save a File constructor without specifying a filename. If the file itself already contains a name, there is a hand full of ways to get a file instance (from storage, file input, new constructor, clipboard event). If you still want to change the name, then you can change it in the 2nd argument.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Note: Ie and Edge don&#39;t support the new File constructor,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// so it&#39;s better to construct blobs and use saveAs(blob, filename)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello world.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/plain;charset=utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileSaver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">saveAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span></code></pre></div><p><img src="https://in.getclicky.com/212712ns.gif" alt="Tracking image"></p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Basic Node.JS installation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sse-file-saver</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bower</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sse-file-saver</span></span></code></pre></div><p>Additionally, TypeScript definitions can be installed via:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Additional typescript definitions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @types/sse-file-saver</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div>`,39),l=[n];function h(r,o,p,d,k,g){return a(),i("div",null,l)}const u=s(e,[["render",h]]);export{E as __pageData,u as default};
